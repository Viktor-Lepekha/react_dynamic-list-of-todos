{"version":3,"sources":["components/TodoList/TodoList.jsx","utils/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","todos","selectUser","query","setState","filterBy","className","type","name","value","onChange","map","todo","classNames","completed","key","id","title","onClick","userId","loadData","url","fetch","then","response","json","serverResponse","data","CurrentUser","state","user","this","loadUser","prevProps","a","props","clearUser","email","phone","React","PureComponent","App","selectedUserId","searchQuery","handleChange","event","target","filter","todosToShow","toLowerCase","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29ab17b3.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport const TodoList = ({ todos, selectUser, query, setState, filterBy }) => {\n  const unchecked = 'TodoList__item--unchecked';\n  const checked = 'TodoList__item--checked';\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <div className=\"TodoList__list-container\">\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={query}\n          onChange={setState}\n        />\n        <select\n          name=\"filterBy\"\n          value={filterBy}\n          onChange={setState}\n        >\n          <option value=\"all\">all</option>\n          <option value=\"active\">active</option>\n          <option value=\"completed\">completed</option>\n        </select>\n        <ul className=\"TodoList__list\">\n          {todos.map(todo => (\n            <li\n              className={classNames('TodoList__item', {\n                [checked]: todo.completed === true,\n                [unchecked]: todo.completed === false,\n              })}\n              key={todo.id}\n            >\n              <label>\n                <input type=\"checkbox\" />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className=\"\n                  TodoList__user-button\n                  TodoList__user-button--selected\n                  button\n                \"\n                type=\"button\"\n                onClick={() => {\n                  selectUser(todo.userId);\n                }}\n              >\n                {`User #${todo.userId}`}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  })).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n  setState: PropTypes.func.isRequired,\n  filterBy: PropTypes.string.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const loadData = url => fetch(`${BASE_URL}${url}`)\n  .then(response => response.json())\n  .then(serverResponse => serverResponse.data || serverResponse);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { loadData } from '../../utils';\n\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.PureComponent {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadUser();\n    }\n  }\n\n  async loadUser() {\n    const user = await loadData(`/users/${this.props.userId}/`);\n\n    this.setState({\n      user,\n    });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { clearUser } = this.props;\n\n    if (!user) {\n      return `No user selected`;\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${user.id}`}</span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => clearUser()}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { loadData } from './utils';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    searchQuery: '',\n    filterBy: 'all',\n  };\n\n  async componentDidMount() {\n    const todos = await loadData('/todos');\n\n    this.setState({ todos: todos.filter(todo => todo.title !== null) });\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { todos, searchQuery, filterBy } = this.state;\n\n    const todosToShow = todos\n      .filter((todo) => {\n        switch (filterBy) {\n          case 'active':\n            return todo.completed === false;\n          case 'completed':\n            return todo.completed === true;\n          default:\n            return todo;\n        }\n      })\n      .filter(todo => todo.title.toLowerCase()\n        .includes(this.state.searchQuery.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todosToShow}\n            selectedUserId={this.state.selectedUserId}\n            selectUser={(selectedUserId) => {\n              this.setState({\n                selectedUserId,\n              });\n            }}\n            query={searchQuery}\n            setState={this.handleChange}\n            filterBy={filterBy}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {this.state.selectedUserId ? (\n              <CurrentUser\n                userId={this.state.selectedUserId}\n                clearUser={() => {\n                  this.setState({\n                    selectedUserId: 0,\n                  });\n                }}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}