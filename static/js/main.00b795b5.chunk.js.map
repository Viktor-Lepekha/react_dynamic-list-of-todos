{"version":3,"sources":["components/TodoList/TodoList.jsx","utils/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","todos","selectUser","query","setState","filterBy","todosToShow","filter","todo","completed","title","toLowerCase","includes","className","type","name","value","onChange","map","classNames","key","id","onClick","userId","loadData","url","fetch","then","response","json","serverResponse","data","loadUser","user","CurrentUser","state","isLoading","this","getUser","prevProps","a","props","clearUser","src","alt","email","phone","React","PureComponent","App","selectedUserId","searchQuery","handleChange","event","target","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00b795b5.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport const TodoList = ({ todos, selectUser, query, setState, filterBy }) => {\n  const unchecked = 'TodoList__item--unchecked';\n  const checked = 'TodoList__item--checked';\n\n  const todosToShow = todos\n    .filter((todo) => {\n      switch (filterBy) {\n        case 'active':\n          return todo.completed === false;\n        case 'completed':\n          return todo.completed === true;\n        default:\n          return todo;\n      }\n    })\n    .filter(todo => todo.title.toLowerCase()\n      .includes(query.toLowerCase()));\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <div className=\"TodoList__list-container\">\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={query}\n          onChange={setState}\n        />\n        <select\n          name=\"filterBy\"\n          value={filterBy}\n          onChange={setState}\n        >\n          <option value=\"all\">all</option>\n          <option value=\"active\">active</option>\n          <option value=\"completed\">completed</option>\n        </select>\n        <ul className=\"TodoList__list\">\n          {todosToShow.map(todo => (\n            <li\n              className={classNames('TodoList__item', {\n                [checked]: todo.completed === true,\n                [unchecked]: todo.completed === false,\n              })}\n              key={todo.id}\n            >\n              <label>\n                <input type=\"checkbox\" />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className=\"\n                  TodoList__user-button\n                  TodoList__user-button--selected\n                  button\n                \"\n                type=\"button\"\n                onClick={() => {\n                  selectUser(todo.userId);\n                }}\n              >\n                {`User #${todo.userId}`}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  })).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n  setState: PropTypes.func.isRequired,\n  filterBy: PropTypes.string.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const loadData = url => fetch(`${BASE_URL}${url}`)\n  .then(response => response.json())\n  .then(serverResponse => serverResponse.data || serverResponse);\n\nexport const loadTodos = () => loadData('/todos');\n\nexport const loadUser = user => loadData(`/users/${user}/`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { loadUser } from '../../utils';\n\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.PureComponent {\n  state = {\n    user: null,\n    isLoading: false,\n  }\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.getUser();\n    }\n  }\n\n  async getUser() {\n    this.setState({\n      isLoading: true,\n    });\n    const user = await loadUser(this.props.userId);\n\n    this.setState({\n      user,\n      isLoading: false,\n    });\n  }\n\n  render() {\n    const { user, isLoading } = this.state;\n    const { clearUser } = this.props;\n\n    if (!user) {\n      return `No user selected`;\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        {isLoading ? (\n          <img\n            src=\"https://i.gifer.com/2cOP.gif\"\n            alt=\"loading\"\n          />\n        )\n          : (\n            <>\n              <h2 className=\"CurrentUser__title\">\n                <span>{`Selected user: ${user.id}`}</span>\n              </h2>\n              <h3 className=\"CurrentUser__name\">{user.name}</h3>\n              <p className=\"CurrentUser__email\">{user.email}</p>\n              <p className=\"CurrentUser__phone\">{user.phone}</p>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={() => clearUser()}\n              >\n                Clear\n              </button>\n            </>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { loadTodos } from './utils/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    searchQuery: '',\n    filterBy: 'all',\n  };\n\n  async componentDidMount() {\n    const todos = await loadTodos();\n\n    this.setState({ todos: todos.filter(todo => todo.title !== null) });\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { todos, searchQuery, filterBy } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectedUserId={this.state.selectedUserId}\n            selectUser={(selectedUserId) => {\n              this.setState({\n                selectedUserId,\n              });\n            }}\n            query={searchQuery}\n            setState={this.handleChange}\n            filterBy={filterBy}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {this.state.selectedUserId ? (\n              <CurrentUser\n                userId={this.state.selectedUserId}\n                clearUser={() => {\n                  this.setState({\n                    selectedUserId: 0,\n                  });\n                }}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}